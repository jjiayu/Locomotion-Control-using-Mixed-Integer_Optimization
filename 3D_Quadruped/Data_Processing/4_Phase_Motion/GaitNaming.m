function GaitName = GaitNaming(gait)
%GAITNAMING Summary of this function goes here
%   Detailed explanation goes here

gait = gait(:,1:4); %cut the phase timing

%Default gait name
GaitName = "";

%Gait Termplate
%   Phase direction: Horizontal: LF -> LH -> RF -> RH
%LowSpeedAmble-Case1
LowSpeedAmbleCase1_Pattern = [1,0,1,1;...
                              0,1,1,0;...
                              1,1,0,1;...
                              1,1,1,1];
%LowSpeedAmble-Case2
LowSpeedAmbleCase2_Pattern = [1,1,1,0;...
                              1,0,0,1;...
                              0,1,1,1;...
                              1,1,1,1];
%Asymmetric Walk Trot Case1
AsymmetricWalkTrotCase1_Pattern = [0,1,1,0;...
                                   1,1,0,1;...
                                   1,0,0,1;...
                                   1,0,1,1];
%Asymmetric Walk Trot Case2
AsymmetricWalkTrotCase2_Pattern = [0,1,1,1;...
                                   0,1,1,0;...
                                   1,1,1,0;...
                                   1,0,0,1];
%Sharp Walk Trot
SharpWalkTrot_Pattern = [0,1,1,0;...
                         1,0,0,1;...
                         1,0,0,1;...
                         0,1,1,0];
%Dynamic Asymmetric Trot Case1
DynamicAsymmetricTrotCase1_Pattern = [0,0,1,0;...
                                      1,0,0,1;...
                                      0,1,0,0;...
                                      0,1,1,0];
                                  
DynamicAsymmetricTrotCase2_Pattern = [1,0,0,0;...
                                      0,1,1,0;...
                                      0,0,0,1;...
                                      1,0,0,1];
                                  
%Galloping_Pattern
Galloping_Pattern = [0,0,0,1;...
                     0,0,1,0;...
                     0,1,0,0;...
                     1,0,0,0];
%Running Trot
RunningTrot_Pattern = [0,1,1,0;...
                       0,0,0,0;...
                       1,0,0,1;...
                       0,0,0,0];
%Running Pace
RunningPace_Pattern = [0,0,1,1;...
                       0,0,0,0;...
                       1,1,0,0;...
                       0,0,0,0];
                   
%Walk Trot
WalkTrot_Pattern = [0,1,1,0;...
                    1,1,1,1;...
                    1,0,0,1;...
                    1,1,1,1];
                
% %Special_Gait
% SpecialGait_Pattern = [1,0,0,0;...
%                        0,1,1,0;...
%                        0,0,0,1;...
%                        1,0,0,1];
                   
%Special_Gait_Case1
SpecialGaitCase1_Pattern = [0,1,1,0;...
                            1,0,0,0;...
                            0,0,0,1;...
                            0,1,1,0];
                    
%Special_Gait Case2
SpecialGaitCase2_Pattern = [0,1,0,0;...
                            1,0,0,1;...
                            1,0,0,1;...
                            0,0,1,0];

% Judging process
if (mod(sum(gait(:,1)),1) ~= 0) && (mod(sum(gait(:,2)),1) ~= 0) && (mod(sum(gait(:,3)),1) ~= 0) && (mod(sum(gait(:,4)),1) ~= 0)
    GaitName = "N/A"; %No feasible results
%Low-speed-Amble Case 1
elseif isequal(gait,LowSpeedAmbleCase1_Pattern) || ...
       isequal(gait,[LowSpeedAmbleCase1_Pattern(2:4,:);LowSpeedAmbleCase1_Pattern(1,:)]) || ...
       isequal(gait,[LowSpeedAmbleCase1_Pattern(3:4,:);LowSpeedAmbleCase1_Pattern(1:2,:)]) || ...
       isequal(gait,[LowSpeedAmbleCase1_Pattern(4,:);LowSpeedAmbleCase1_Pattern(1:3,:)])
   GaitName = "LowSpeedAmble-Case1";
%Low-speed-Amble Case 2
elseif isequal(gait,LowSpeedAmbleCase2_Pattern) || ...
       isequal(gait,[LowSpeedAmbleCase2_Pattern(2:4,:);LowSpeedAmbleCase2_Pattern(1,:)]) || ...
       isequal(gait,[LowSpeedAmbleCase2_Pattern(3:4,:);LowSpeedAmbleCase2_Pattern(1:2,:)]) || ...
       isequal(gait,[LowSpeedAmbleCase2_Pattern(4,:);LowSpeedAmbleCase2_Pattern(1:3,:)])
   GaitName = "LowSpeedAmble-Case2";
%Asymmetric Walk Trot Case1
elseif isequal(gait,AsymmetricWalkTrotCase1_Pattern) || ...
       isequal(gait,[AsymmetricWalkTrotCase1_Pattern(2:4,:);AsymmetricWalkTrotCase1_Pattern(1,:)]) || ...
       isequal(gait,[AsymmetricWalkTrotCase1_Pattern(3:4,:);AsymmetricWalkTrotCase1_Pattern(1:2,:)]) || ...
       isequal(gait,[AsymmetricWalkTrotCase1_Pattern(4,:);AsymmetricWalkTrotCase1_Pattern(1:3,:)])
   GaitName = "AsymmetricTrotting-Case1";
%Asymmetric Walk Trot Trot Case2
elseif isequal(gait,AsymmetricWalkTrotCase2_Pattern) || ...
       isequal(gait,[AsymmetricWalkTrotCase2_Pattern(2:4,:);AsymmetricWalkTrotCase2_Pattern(1,:)]) || ...
       isequal(gait,[AsymmetricWalkTrotCase2_Pattern(3:4,:);AsymmetricWalkTrotCase2_Pattern(1:2,:)]) || ...
       isequal(gait,[AsymmetricWalkTrotCase2_Pattern(4,:);AsymmetricWalkTrotCase2_Pattern(1:3,:)])
   GaitName = "AsymmetricTrotting-Case2";
%Sharp Walk Trot
elseif isequal(gait,SharpWalkTrot_Pattern) || ...
       isequal(gait,[SharpWalkTrot_Pattern(2:4,:);SharpWalkTrot_Pattern(1,:)]) || ...
       isequal(gait,[SharpWalkTrot_Pattern(3:4,:);SharpWalkTrot_Pattern(1:2,:)]) || ...
       isequal(gait,[SharpWalkTrot_Pattern(4,:);SharpWalkTrot_Pattern(1:3,:)])
   GaitName = "SharpWalkTrot";
%Dynamic Asymmetric Trot Case 1
elseif isequal(gait,DynamicAsymmetricTrotCase1_Pattern) || ...
       isequal(gait,[DynamicAsymmetricTrotCase1_Pattern(2:4,:);DynamicAsymmetricTrotCase1_Pattern(1,:)]) || ...
       isequal(gait,[DynamicAsymmetricTrotCase1_Pattern(3:4,:);DynamicAsymmetricTrotCase1_Pattern(1:2,:)]) || ...
       isequal(gait,[DynamicAsymmetricTrotCase1_Pattern(4,:);DynamicAsymmetricTrotCase1_Pattern(1:3,:)])
   GaitName = "DynamicAsymmetricTrot-Case1";
%Dynamic Asymmetric Trot Case 2
elseif isequal(gait,DynamicAsymmetricTrotCase2_Pattern) || ...
       isequal(gait,[DynamicAsymmetricTrotCase2_Pattern(2:4,:);DynamicAsymmetricTrotCase2_Pattern(1,:)]) || ...
       isequal(gait,[DynamicAsymmetricTrotCase2_Pattern(3:4,:);DynamicAsymmetricTrotCase2_Pattern(1:2,:)]) || ...
       isequal(gait,[DynamicAsymmetricTrotCase2_Pattern(4,:);DynamicAsymmetricTrotCase2_Pattern(1:3,:)])
   GaitName = "DynamicAsymmetricTrot-Case2";
%Galloping
elseif isequal(gait,Galloping_Pattern) || ...
       isequal(gait,[Galloping_Pattern(2:4,:);Galloping_Pattern(1,:)]) || ...
       isequal(gait,[Galloping_Pattern(3:4,:);Galloping_Pattern(1:2,:)]) || ...
       isequal(gait,[Galloping_Pattern(4,:);Galloping_Pattern(1:3,:)])
   GaitName = "Galloping";
%Running Trot
elseif isequal(gait,RunningTrot_Pattern) || ...
       isequal(gait,[RunningTrot_Pattern(2:4,:);RunningTrot_Pattern(1,:)]) || ...
       isequal(gait,[RunningTrot_Pattern(3:4,:);RunningTrot_Pattern(1:2,:)]) || ...
       isequal(gait,[RunningTrot_Pattern(4,:);RunningTrot_Pattern(1:3,:)])
   GaitName = "RunningTrot";
%Running Pace
elseif isequal(gait,RunningPace_Pattern) || ...
       isequal(gait,[RunningPace_Pattern(2:4,:);RunningPace_Pattern(1,:)]) || ...
       isequal(gait,[RunningPace_Pattern(3:4,:);RunningPace_Pattern(1:2,:)]) || ...
       isequal(gait,[RunningPace_Pattern(4,:);RunningPace_Pattern(1:3,:)])
   GaitName = "RunningPace";
%Walking Trot
elseif isequal(gait,WalkTrot_Pattern) || ...
       isequal(gait,[WalkTrot_Pattern(2:4,:);WalkTrot_Pattern(1,:)]) || ...
       isequal(gait,[WalkTrot_Pattern(3:4,:);WalkTrot_Pattern(1:2,:)]) || ...
       isequal(gait,[WalkTrot_Pattern(4,:);WalkTrot_Pattern(1:3,:)])
   GaitName = "WalkingTrot";
% %Special Gait
% elseif isequal(gait,SpecialGait_Pattern) || ...
%        isequal(gait,[SpecialGait_Pattern(2:4,:);SpecialGait_Pattern(1,:)]) || ...
%        isequal(gait,[SpecialGait_Pattern(3:4,:);SpecialGait_Pattern(1:2,:)]) || ...
%        isequal(gait,[SpecialGait_Pattern(4,:);SpecialGait_Pattern(1:3,:)])
%    GaitName = "SpecialGait";
%Special Gait Case 1
elseif isequal(gait,SpecialGaitCase1_Pattern) || ...
       isequal(gait,[SpecialGaitCase1_Pattern(2:4,:);SpecialGaitCase1_Pattern(1,:)]) || ...
       isequal(gait,[SpecialGaitCase1_Pattern(3:4,:);SpecialGaitCase1_Pattern(1:2,:)]) || ...
       isequal(gait,[SpecialGaitCase1_Pattern(4,:);SpecialGaitCase1_Pattern(1:3,:)])
   GaitName = "SpecialGait-Case1";
%Special Gait Case 2
elseif isequal(gait,SpecialGaitCase2_Pattern) || ...
       isequal(gait,[SpecialGaitCase2_Pattern(2:4,:);SpecialGaitCase2_Pattern(1,:)]) || ...
       isequal(gait,[SpecialGaitCase2_Pattern(3:4,:);SpecialGaitCase2_Pattern(1:2,:)]) || ...
       isequal(gait,[SpecialGaitCase2_Pattern(4,:);SpecialGaitCase2_Pattern(1:3,:)])
   GaitName = "SpecialGait-Case2";
else
    GaitName = "Unknown";
end


% 
% %duplicate the gait matrix, only take integer variables
% gaitMatrix_doublephase = [gait(:,1:2);gait(:,1:2)];
% %%%
% 
% if (mod(sum(gait(:,1)),1) ~= 0) && (mod(sum(gait(:,2)),1) ~= 0)
%     GaitName = "N/A"; %No feasible results
% else
%     %Check Pronking gait first
%     double_fly_support_flag = zeros(size(gaitMatrix_doublephase,1),1);
%     for loop_Idx = 1:size(gaitMatrix_doublephase,1)
%         if isequal(gaitMatrix_doublephase(loop_Idx,1),gaitMatrix_doublephase(loop_Idx,2))
%             double_fly_support_flag(loop_Idx) = 1;
%         else
%             double_fly_support_flag(loop_Idx) = 0;
%         end
%     end
%     if sum(double_fly_support_flag) == size(gaitMatrix_doublephase,1)
%         GaitName = "Pronking";
%     else %other gaits
%         %find hind support phase
%         HindContactIdx = [];
%         for loop_Idx = 1:size(gaitMatrix_doublephase,1)
%             if isequal(gaitMatrix_doublephase(loop_Idx,:),[0,1])
%                 HindContactIdx = [HindContactIdx,loop_Idx];
%             end
%         end
% 
%         if size(HindContactIdx) == 0 %no gait start from hind contact
%             GaitName = "Unknown";
%         else
%             %Clean gait from hind support
%             Gait_from_HindSupport = gaitMatrix_doublephase(HindContactIdx(1):HindContactIdx(1)+3,:);
%             %remove phase with same contact config;
%             clean_Gait_from_HindSupport = Gait_from_HindSupport;
%             if isequal(clean_Gait_from_HindSupport(1,:),clean_Gait_from_HindSupport(end,:))
%                 clean_Gait_from_HindSupport(end,:) = [];
%             end
%             
%             vanishing_phase_idx = [];
%             for loop_Idx = 1:size(clean_Gait_from_HindSupport,1)-1
%                 if isequal(clean_Gait_from_HindSupport(loop_Idx,:),clean_Gait_from_HindSupport(loop_Idx+1,:))
%                     vanishing_phase_idx = [vanishing_phase_idx,loop_Idx+1];
%                 end
%             end         
%             clean_Gait_from_HindSupport(vanishing_phase_idx,:) = [];
%             
% %             %remove redudant phases
% %             for loop_Idx = 1:size(vanishing_phase_idx)
% %                 clean_Gait_from_HindSupport(vanishing_phase_idx(loop_Idx),:) = [];
% %             end
% 
%             %Assign Names
%             if size(clean_Gait_from_HindSupport,1) == 2
%                 if isequal(clean_Gait_from_HindSupport(2,:),[1,0])
%                     GaitName = "Trotting";
%                 else
%                     GaitName = "Unknown";
%                 end
%             elseif size(clean_Gait_from_HindSupport,1) == 3
%                 if isequal(clean_Gait_from_HindSupport(2,:),[1,1]) && isequal(clean_Gait_from_HindSupport(3,:),[1,0])
%                     GaitName = "Walking-S_H-D-F"; %Hind -> Double -> Front, commonly found in Half_cheetah model
%                 elseif isequal(clean_Gait_from_HindSupport(2,:),[1,0]) && isequal(clean_Gait_from_HindSupport(3,:),[1,1])
%                     GaitName = "Walking-S_H-F-D"; %Hind -> Front -Double, commonly Found in Humanoid
%                 elseif isequal(clean_Gait_from_HindSupport(2,:),[0,0]) && isequal(clean_Gait_from_HindSupport(3,:),[1,0])
%                     GaitName = "Bounding-S_H-FLY-F";
%                 elseif isequal(clean_Gait_from_HindSupport(2,:),[1,0]) && isequal(clean_Gait_from_HindSupport(3,:),[0,0])
%                    GaitName = "Bounding-S_H-F-FLY";
%                 else
%                     GaitName = "Unknown";
%                 end
%             elseif size(clean_Gait_from_HindSupport,1) == 4
%                 if isequal(clean_Gait_from_HindSupport(2,:),[1,1]) && isequal(clean_Gait_from_HindSupport(3,:),[1,0]) && isequal(clean_Gait_from_HindSupport(4,:),[0,0])
%                     GaitName = "Galloping_H-D-F-Fly"; %Gallop commonly found in half cheetah, Hind -> Double -> Front -> Fly
%                 elseif isequal(clean_Gait_from_HindSupport(2,:),[0,0]) && isequal(clean_Gait_from_HindSupport(3,:),[1,0]) && isequal(clean_Gait_from_HindSupport(4,:),[1,1])
%                     GaitName = "Galloping_H-Fly-F-D"; %Gallop commonly found in humanoid, Hind -> Fly -> Front -> Double
%                 elseif isequal(clean_Gait_from_HindSupport(2,:),[0,0]) && isequal(clean_Gait_from_HindSupport(3,:),[1,0]) && isequal(clean_Gait_from_HindSupport(4,:),[0,0])
%                     GaitName = "Bounding-D";
%                 elseif isequal(clean_Gait_from_HindSupport(2,:),[1,1]) && isequal(clean_Gait_from_HindSupport(3,:),[1,0]) && isequal(clean_Gait_from_HindSupport(4,:),[1,1])
%                     GaitName = "Walking-D";
%                 else
%                     GaitName = "Unknown";
%                 end
%             else
%                 GaitName = "Unknown";
%             end
%         end
%     end
% end

end

