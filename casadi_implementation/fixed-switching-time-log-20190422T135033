CasADi Implementation
2D Locomotion Control using Mixed-integer Nonlinear Optimization
Fixed Switching Time
 
Date and Time:
   22-Apr-2019 13:50:33

Correspondent Log File Name: fixed-switching-time-log-20190422T135033
---------------------------------------------------
Solver Selection, 1: Knitro, 2: Bonmin 
1
Selected Solver: knitro
---------------------------------------------------
Environment Information: 
Friction Cone: 
0.6
---------------------------------------------------
Input Termianl Time (e.g. 1s): 
1
Input Number of Phases: 
4
Time Horizon of Each Phase: 0.25 (s)
Input Number of Time Steps for Each Phase: 
5
Time Step Size: 
0.05 (s)
Number of Knots/Discretizations (From Time 0 to 1):
21 (Number of Time Steps in Each Phase * Number of Phases + 1)
---------------------------------------------------
Input Travel Distance along x-axis (m): 
0.5
---------------------------------------------------
Select the Case for big-M value for Foot/End-Effector Velocity for x-axis: 1--> Default Value (5m/s); 2--> N time of average task speed (in x-axis); 3--> User Specified 
2
Input the Number of Scales of the Average Task Speed(in x-axis) (i.e. 1, 2, 3, etc...): 
5
Generating Decision Variables Vectors/Lists
Checked - Contact Configuration Varaibels for Each Phase are Generated Coorectly
-----------------------------------------------------------
Checked - Names in DecisionVars are consistent with the name labels in VarNamesList
Constraints and Objetive Function Constructed
-------------------------------------------------
Define Number of Max Nodes to be Explored: 1--> Worst Case Scenario; 2 --> User Specified; 3 --> Default Value 
1
Selected Worst-case Scenarios to Explore 4398046511104 Nodes

=======================================
           Academic License
       (NOT FOR COMMERCIAL USE)
         Artelys Knitro 11.1.2
=======================================

MINLP solver shifted start point to satisfy bounds (12 variables).
hessopt:                 1
mip_branchrule:          1
mip_maxnodes:            0
mip_outinterval:         100
mip_outlevel:            2
mip_selectrule:          3
Knitro changing mip_method from AUTO to 1.
Knitro changing mip_rootalg from AUTO to 1.
Knitro changing mip_lpalg from AUTO to 3.
Knitro changing mip_rounding from AUTO to 3.
Knitro changing mip_heuristic from AUTO to 2.
Knitro changing mip_pseudoinit from AUTO to 1.

Problem Characteristics
-----------------------
Objective goal:  Minimize
Objective type:  general
Number of variables:                                386
    bounded below only:                              80
    bounded above only:                               0
    bounded below and above:                          8
    fixed:                                           12
    free:                                           286
Number of binary variables:                           8
Number of integer variables:                          0
Number of constraints:                              646
    linear equalities:                              180
    quadratic equalities:                             0
    gen. nonlinear equalities:                       20
    linear one-sided inequalities:                  362
    quadratic one-sided inequalities:                 0
    gen. nonlinear one-sided inequalities:            0
    linear two-sided inequalities:                    0
    quadratic two-sided inequalities:                 0
    gen. nonlinear two-sided inequalities:           84
Number of nonzeros in Jacobian:                    1964
Number of nonzeros in Hessian:                      391

Knitro detected 0 GUB constraints
Knitro derived 0 knapsack covers after examining 80 constraints
Knitro solving root node relaxation
Knitro searching for integer feasible point using heuristic
   iter =      1: Iinf =      8, FeasError =   1.765e-02
   iter =      2: Iinf =      6, FeasError =   6.400e-01
   iter =      3: Iinf =      8, FeasError =   1.765e-02
   iter =      4: Iinf =      8, FeasError =   6.400e-01
   iter =      5: Iinf =      8, FeasError =   1.765e-02
   iter =      6: Iinf =      6, FeasError =   6.400e-01
   iter =      7: Iinf =      8, FeasError =   1.765e-02
   iter =      8: Iinf =      6, FeasError =   6.400e-01
   iter =      9: Iinf =      8, FeasError =   1.765e-02
   iter =     10: Iinf =      8, FeasError =   6.400e-01
   iter =     11: Iinf =      8, FeasError =   1.765e-02
   iter =     12: Iinf =      8, FeasError =   6.400e-01
   iter =     13: Iinf =      8, FeasError =   1.765e-02
   iter =     14: Iinf =      6, FeasError =   6.400e-01
   iter =     15: Iinf =      8, FeasError =   1.765e-02
   iter =     16: Iinf =      7, FeasError =   6.400e-01
   iter =     17: Iinf =      8, FeasError =   1.765e-02
   iter =     18: Iinf =      6, FeasError =   6.400e-01
   iter =     19: Iinf =      8, FeasError =   1.765e-02
   iter =     20: Iinf =      6, FeasError =   6.400e-01
   iter =     21: Iinf =      8, FeasError =   1.765e-02
   iter =     22: Iinf =      6, FeasError =   6.400e-01
   iter =     23: Iinf =      8, FeasError =   1.765e-02
   iter =     24: Iinf =      8, FeasError =   6.400e-01
   iter =     25: Iinf =      8, FeasError =   1.765e-02
   iter =     26: Iinf =      6, FeasError =   6.400e-01
   iter =     27: Iinf =      8, FeasError =   1.765e-02
   iter =     28: Iinf =      8, FeasError =   6.400e-01
   iter =     29: Iinf =      8, FeasError =   1.765e-02
   iter =     30: Iinf =      6, FeasError =   6.400e-01
   iter =     31: Iinf =      8, FeasError =   1.765e-02
   iter =     32: Iinf =      6, FeasError =   6.400e-01
   iter =     33: Iinf =      8, FeasError =   1.765e-02
   iter =     34: Iinf =      8, FeasError =   6.400e-01
   iter =     35: Iinf =      8, FeasError =   1.765e-02
   iter =     36: Iinf =      6, FeasError =   6.400e-01
   iter =     37: Iinf =      8, FeasError =   1.765e-02
   iter =     38: Iinf =      6, FeasError =   6.400e-01
   iter =     39: Iinf =      8, FeasError =   1.765e-02
   iter =     40: Iinf =      7, FeasError =   6.400e-01
   iter =     41: Iinf =      8, FeasError =   1.765e-02
   iter =     42: Iinf =      6, FeasError =   6.400e-01
   iter =     43: Iinf =      8, FeasError =   1.765e-02
   iter =     44: Iinf =      6, FeasError =   6.400e-01
   iter =     45: Iinf =      8, FeasError =   1.765e-02
   iter =     46: Iinf =      6, FeasError =   6.400e-01
   iter =     47: Iinf =      8, FeasError =   1.765e-02
   iter =     48: Iinf =      8, FeasError =   6.400e-01
   iter =     49: Iinf =      8, FeasError =   1.765e-02
   iter =     50: Iinf =      6, FeasError =   6.400e-01
   iter =     51: Iinf =      8, FeasError =   1.765e-02
   iter =     52: Iinf =      6, FeasError =   6.400e-01
   iter =     53: Iinf =      8, FeasError =   1.765e-02
   iter =     54: Iinf =      6, FeasError =   6.400e-01
   iter =     55: Iinf =      8, FeasError =   1.765e-02
   iter =     56: Iinf =      6, FeasError =   6.400e-01
   iter =     57: Iinf =      8, FeasError =   1.765e-02
   iter =     58: Iinf =      6, FeasError =   6.400e-01
   iter =     59: Iinf =      8, FeasError =   1.765e-02
   iter =     60: Iinf =      6, FeasError =   6.400e-01
   iter =     61: Iinf =      8, FeasError =   1.765e-02
   iter =     62: Iinf =      6, FeasError =   6.400e-01
   iter =     63: Iinf =      8, FeasError =   1.765e-02
   iter =     64: Iinf =      8, FeasError =   6.400e-01
   iter =     65: Iinf =      8, FeasError =   1.765e-02
   iter =     66: Iinf =      8, FeasError =   6.400e-01
   iter =     67: Iinf =      8, FeasError =   1.765e-02
   iter =     68: Iinf =      6, FeasError =   6.400e-01
   iter =     69: Iinf =      8, FeasError =   1.765e-02
   iter =     70: Iinf =      6, FeasError =   6.400e-01
   iter =     71: Iinf =      8, FeasError =   1.765e-02
   iter =     72: Iinf =      8, FeasError =   6.400e-01
   iter =     73: Iinf =      8, FeasError =   1.765e-02
   iter =     74: Iinf =      6, FeasError =   6.400e-01
   iter =     75: Iinf =      8, FeasError =   1.765e-02
   iter =     76: Iinf =      6, FeasError =   6.400e-01
   iter =     77: Iinf =      8, FeasError =   1.765e-02
   iter =     78: Iinf =      6, FeasError =   6.400e-01
   iter =     79: Iinf =      8, FeasError =   1.765e-02
   iter =     80: Iinf =      6, FeasError =   6.400e-01
   iter =     81: Iinf =      8, FeasError =   1.765e-02
   iter =     82: Iinf =      6, FeasError =   6.400e-01
   iter =     83: Iinf =      8, FeasError =   1.765e-02
   iter =     84: Iinf =      6, FeasError =   6.400e-01
   iter =     85: Iinf =      8, FeasError =   1.765e-02
   iter =     86: Iinf =      6, FeasError =   6.400e-01
   iter =     87: Iinf =      8, FeasError =   1.765e-02
   iter =     88: Iinf =      6, FeasError =   6.400e-01
   iter =     89: Iinf =      8, FeasError =   1.765e-02
   iter =     90: Iinf =      6, FeasError =   6.400e-01
   iter =     91: Iinf =      8, FeasError =   1.765e-02
   iter =     92: Iinf =      6, FeasError =   6.400e-01
   iter =     93: Iinf =      8, FeasError =   1.765e-02
   iter =     94: Iinf =      6, FeasError =   6.400e-01
   iter =     95: Iinf =      8, FeasError =   1.765e-02
   iter =     96: Iinf =      6, FeasError =   6.400e-01
   iter =     97: Iinf =      8, FeasError =   1.765e-02
   iter =     98: Iinf =      6, FeasError =   6.400e-01
   iter =     99: Iinf =      8, FeasError =   1.765e-02
   iter =    100: Iinf =      6, FeasError =   6.400e-01
   iter =    101: Iinf =      8, FeasError =   1.765e-02
Knitro heuristic terminating at iteration limit.
Knitro MIP using Branch and Bound method

                                            Best        Best     Cumulative
   Node    Left    Iinf    Objective     Relaxation   Incumbent   Real Time
  ------  ------  ------  ----------     ----------  ----------  ----------
       1       0       8    1.00e+05       1.00e+05                   3.165
*     48       7       0    2.52e+05  f    1.15e+05    2.52e+05       7.603
*     66       9       0    2.10e+05  f    1.15e+05    2.10e+05       8.938
*     72       7       0    1.76e+05  f    1.15e+05    1.76e+05       9.542
*     78       7       0    1.41e+05  f    1.26e+05    1.41e+05      10.065
      87       0            1.34e+05       1.41e+05    1.41e+05      11.115

EXIT: Optimal solution found.

Final Statistics for MIP
------------------------
Final objective value               =   1.41264734176185e+05
Final integrality gap (abs / rel)   =  0.00e+00 /   0.00e+00 ( 0.00%)
# of nodes processed                =       87
# of subproblems processed          =      192
Total program time (secs)           =      11.13064 (    11.379 CPU time)
Time spent in evaluations (secs)    =       0.89044

===========================================================================

               t_proc [s]   t_wall [s]    n_eval
      nlp_fg        0.334        0.326     10822
   nlp_gf_jg        0.285        0.271      8851
  nlp_hess_l        0.201        0.195      8486
      solver         11.4         11.2         1
