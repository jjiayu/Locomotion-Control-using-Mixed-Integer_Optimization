====================================================
Genearl Information:
====================================================
CasADi Implementation
2D Locomotion Control using Mixed-integer Nonlinear Optimization
Multi-Phase Formulation:
Optimize over Control, Gait Sequence, and Switching Time
----------------------------------------------------
Date and Time:
   25-Apr-2019 11:16:55

----------------------------------------------------
Correspondent Log File Name: multiphase-log-20190425T111655
====================================================
 
====================================================
Environment Information: 
----------------------------------------------------
Friction Cone: 0.6
====================================================
 
====================================================
Temporal Setup:
----------------------------------------------------
Terminal Time:
Optimization of Terminal Time (Tend): 
1 -> Optimize, 2 -> Left as Free Variable 
1
Input Termianl Time (e.g. 1s): 
1
----------------------------------------------------
Input Number of Phases: 
4
----------------------------------------------------
Input Number of Knots for Each Phase: 
5
----------------------------------------------------
Resultant Discretization:
Knot/Discretization Step Size of tau: 0.05
Number of Knots/Discretization of tau (from 0 to 1: 21) (Number of Knots/Discretization in Each Phase * Number of Phases(NumKnots) + 1)
====================================================
 
====================================================
Task Specification:
----------------------------------------------------
Input Travel Distance along x-axis (m): 
0.5
====================================================
 
====================================================
Big-M Setup
====================================================
Big-M for Foot/End-Effector in X-axis:
Select the Setup Case for big-M value for Foot/End-Effector Velocity in x-axis: 
1 -> Default Value (5m/s); 2 -> N time of average task speed (in X-axis); 3 -> User Specified: 
2
 
Current Averate Task Speed in X-axis: 0.5
Input the Scaling Factor of the Average Task Speed (in X-axis) (i.e. 1, 2, 3, etc...): 
10
 
Configured Big-M Value for Foot/End-Effector Velocity for X-axis: 5 m/s
----------------------------------------------------
Big-M for Foot/End-Effector in Y-axis:
Select the Setup Case for big-M value for Foot/End-Effector Velocity in Y-axis: 
1 -> Default Value (5m/s); 2 -> User Specified: 
2
 
Input Big-M value for foot/end-effector Velocity for Y-axis (e.g. 1-5+ m/s): 
NOTE: Can Write the Value as the Kinematics Bounding Box Height (BoundingBox_Height)/Desired Time to Travel the Entire Bounding Box Height
5
 
Configured Big-M Value for Foot/End-Effector Velocity for Y-axis: 5 m/s
----------------------------------------------------
====================================================
====================================================
Solver Setups:
====================================================
Solver Selection: 
1 -> Knitro; 2 -> Bonmin 
1
Selected Solver: knitro
----------------------------------------------------
Solver Dependent Options:
----------------------------------------------------
Define Number of Max Nodes to be Explored: 
 1--> Worst Case Scenario; 2 --> User Specified; 3 --> Default Value
1
Selected Worst-case Scenarios to Explore 256 Nodes
====================================================
 
====================================================
Generate Decision Variables Vectors/Lists:
----------------------------------------------------
Checked - Contact Configuration and Switching Time Varaibels for Each Phase are Generated Coorectly
-----------------------------------------------------------
Checked - Names in DecisionVars are consistent with the name labels in VarNamesList
Constraints and Objetive Function Constructed
===================================================
 
===================================================
Optimization Started

=======================================
           Academic License
       (NOT FOR COMMERCIAL USE)
         Artelys Knitro 11.1.2
=======================================

MINLP solver shifted start point to satisfy bounds (13 variables).
hessopt:                 1
mip_branchrule:          1
mip_maxnodes:            256
mip_outlevel:            2
mip_selectrule:          3
Knitro changing mip_method from AUTO to 1.
Knitro changing mip_rootalg from AUTO to 1.
Knitro changing mip_lpalg from AUTO to 3.
Knitro changing mip_rounding from AUTO to 3.
Knitro changing mip_heuristic from AUTO to 2.
Knitro changing mip_pseudoinit from AUTO to 1.

Problem Characteristics
-----------------------
Objective goal:  Minimize
Objective type:  general
Number of variables:                                390
    bounded below only:                              80
    bounded above only:                               0
    bounded below and above:                          8
    fixed:                                           13
    free:                                           289
Number of binary variables:                           8
Number of integer variables:                          0
Number of constraints:                              650
    linear equalities:                                0
    quadratic equalities:                             0
    gen. nonlinear equalities:                      200
    linear one-sided inequalities:                  366
    quadratic one-sided inequalities:                 0
    gen. nonlinear one-sided inequalities:            0
    linear two-sided inequalities:                    0
    quadratic two-sided inequalities:                 0
    gen. nonlinear two-sided inequalities:           84
Number of nonzeros in Jacobian:                    2321
Number of nonzeros in Hessian:                      994

Knitro detected 0 GUB constraints
Knitro derived 0 knapsack covers after examining 80 constraints
Knitro solving root node relaxation
Knitro searching for integer feasible point using heuristic
   iter =      1: Iinf =      2, FeasError =   4.413e-01
   iter =      2: Iinf =      2, FeasError =   1.000e-01
   iter =      3: Iinf =      2, FeasError =   4.413e-01
   iter =      4: Iinf =      2, FeasError =   1.000e-01
   iter =      5: Iinf =      4, FeasError =   8.826e-01
   iter =      6: Iinf =      2, FeasError =   1.000e-01
   iter =      7: Iinf =      4, FeasError =   8.826e-01
   iter =      8: Iinf =      2, FeasError =   8.008e-02
   iter =      9: Iinf =      2, FeasError =   4.413e-01
   iter =     10: Iinf =      2, FeasError =   8.006e-02
   iter =     11: Iinf =      2, FeasError =   4.413e-01
   iter =     12: Iinf =      2, FeasError =   1.000e-01
   iter =     13: Iinf =      2, FeasError =   4.413e-01
   iter =     14: Iinf =      2, FeasError =   8.017e-02
   iter =     15: Iinf =      4, FeasError =   8.826e-01
   iter =     16: Iinf =      8, FeasError =   8.025e-02
   iter =     17: Iinf =      2, FeasError =   4.413e-01
   iter =     18: Iinf =      2, FeasError =   1.000e-01
   iter =     19: Iinf =      2, FeasError =   4.413e-01
   iter =     20: Iinf =      2, FeasError =   8.018e-02
   iter =     21: Iinf =      4, FeasError =   8.826e-01
   iter =     22: Iinf =      2, FeasError =   1.000e-01
   iter =     23: Iinf =      4, FeasError =   8.826e-01
   iter =     24: Iinf =      2, FeasError =   1.000e-01
   iter =     25: Iinf =      2, FeasError =   4.413e-01
   iter =     26: Iinf =      2, FeasError =   1.000e-01
   iter =     27: Iinf =      2, FeasError =   4.413e-01
   iter =     28: Iinf =      2, FeasError =   8.006e-02
   iter =     29: Iinf =      2, FeasError =   4.413e-01
   iter =     30: Iinf =      2, FeasError =   1.000e-01
   iter =     31: Iinf =      2, FeasError =   4.413e-01
   iter =     32: Iinf =      2, FeasError =   1.000e-01
   iter =     33: Iinf =      4, FeasError =   8.826e-01
   iter =     34: Iinf =      2, FeasError =   1.000e-01
   iter =     35: Iinf =      4, FeasError =   8.826e-01
   iter =     36: Iinf =      2, FeasError =   1.000e-01
   iter =     37: Iinf =      2, FeasError =   4.413e-01
   iter =     38: Iinf =      2, FeasError =   1.000e-01
   iter =     39: Iinf =      2, FeasError =   4.413e-01
   iter =     40: Iinf =      2, FeasError =   1.000e-01
   iter =     41: Iinf =      2, FeasError =   4.413e-01
   iter =     42: Iinf =      2, FeasError =   1.000e-01
   iter =     43: Iinf =      8, Infeasible
   iter =     44: Iinf =      8, Infeasible
   iter =     45: Iinf =      8, Infeasible
   iter =     46: Iinf =      8, Infeasible
   iter =     47: Iinf =      8, Infeasible
   iter =     48: Iinf =      8, Infeasible
   iter =     49: Iinf =      8, Infeasible
   iter =     50: Iinf =      8, Infeasible
   iter =     51: Iinf =      8, Infeasible
   iter =     52: Iinf =      8, Infeasible
   iter =     53: Iinf =      8, Infeasible
   iter =     54: Iinf =      8, Infeasible
   iter =     55: Iinf =      8, Infeasible
   iter =     56: Iinf =      8, Infeasible
   iter =     57: Iinf =      8, Infeasible
   iter =     58: Iinf =      8, Infeasible
   iter =     59: Iinf =      8, Infeasible
   iter =     60: Iinf =      8, Infeasible
   iter =     61: Iinf =      8, Infeasible
   iter =     62: Iinf =      8, Infeasible
   iter =     63: Iinf =      8, Infeasible
   iter =     64: Iinf =      8, Infeasible
   iter =     65: Iinf =      8, Infeasible
   iter =     66: Iinf =      8, Infeasible
   iter =     67: Iinf =      8, Infeasible
   iter =     68: Iinf =      8, Infeasible
   iter =     69: Iinf =      8, Infeasible
   iter =     70: Iinf =      8, Infeasible
   iter =     71: Iinf =      8, Infeasible
   iter =     72: Iinf =      8, Infeasible
   iter =     73: Iinf =      8, Infeasible
   iter =     74: Iinf =      8, Infeasible
   iter =     75: Iinf =      8, Infeasible
   iter =     76: Iinf =      8, Infeasible
   iter =     77: Iinf =      8, Infeasible
   iter =     78: Iinf =      8, Infeasible
   iter =     79: Iinf =      8, Infeasible
   iter =     80: Iinf =      8, Infeasible
   iter =     81: Iinf =      8, Infeasible
   iter =     82: Iinf =      8, Infeasible
   iter =     83: Iinf =      8, Infeasible
   iter =     84: Iinf =      8, Infeasible
   iter =     85: Iinf =      8, Infeasible
   iter =     86: Iinf =      8, Infeasible
   iter =     87: Iinf =      8, Infeasible
   iter =     88: Iinf =      8, Infeasible
   iter =     89: Iinf =      8, Infeasible
   iter =     90: Iinf =      8, Infeasible
   iter =     91: Iinf =      8, Infeasible
   iter =     92: Iinf =      8, Infeasible
   iter =     93: Iinf =      8, Infeasible
   iter =     94: Iinf =      8, Infeasible
   iter =     95: Iinf =      8, Infeasible
   iter =     96: Iinf =      8, Infeasible
   iter =     97: Iinf =      8, Infeasible
   iter =     98: Iinf =      8, Infeasible
   iter =     99: Iinf =      8, Infeasible
   iter =    100: Iinf =      8, Infeasible
   iter =    101: Iinf =      8, Infeasible
Knitro heuristic terminating at iteration limit.
Knitro MIP using Branch and Bound method

                                            Best        Best     Cumulative
   Node    Left    Iinf    Objective     Relaxation   Incumbent   Real Time
  ------  ------  ------  ----------     ----------  ----------  ----------
       1       0       8    1.01e+05       1.01e+05                  33.928
      10       7         INFEASIBLE  pr    1.01e+05                  34.461
      20      11         INFEASIBLE  pr    1.01e+05                  37.195
      30      13       3    1.01e+05       1.01e+05                  39.224
      40      13         INFEASIBLE  pr    1.01e+05                  41.382
*     43      12       0    1.78e+05  f    1.01e+05    1.78e+05      46.821
      50       9       5    1.01e+05       1.01e+05    1.78e+05      53.787
      60      15       3    1.01e+05       1.01e+05    1.78e+05      54.276
      70      17       1    1.34e+05       1.01e+05    1.78e+05      55.288
*     72      17       0    1.38e+05  f    1.01e+05    1.38e+05      55.462
      80      13       2    1.01e+05       1.01e+05    1.38e+05      56.158
      90      11       1    1.22e+05       1.01e+05    1.38e+05      63.516
     100       9       3    1.01e+05       1.01e+05    1.38e+05      66.103
     110      11       2    1.01e+05       1.01e+05    1.38e+05      66.847
     120       7       2    1.01e+05       1.01e+05    1.38e+05      68.284
     130       5         INFEASIBLE  pr    1.01e+05    1.38e+05      69.499
     140       1       1    1.34e+05       1.01e+05    1.38e+05      74.773
     143       0            5.98e+04       1.38e+05    1.38e+05      75.595
  WARNING -- integrality gap is negative

EXIT: Optimal solution found.

Final Statistics for MIP
------------------------
Final objective value               =   1.38480640832567e+05
Final integrality gap (abs / rel)   = -2.12e-01 /  -1.53e-06 (-0.00%)
# of nodes processed                =      143
# of subproblems processed          =      246
Total program time (secs)           =      75.61716 (    76.705 CPU time)
Time spent in evaluations (secs)    =       4.49390

===========================================================================

               t_proc [s]   t_wall [s]    n_eval
      nlp_fg         1.54         1.49     51682
   nlp_gf_jg         1.39         1.36     32144
  nlp_hess_l         1.33          1.3     32095
      solver         76.7         75.7         1
===================================================
 
===================================================
Result Extraction:
---------------------------------------------------
Result Variables Extracted
Original Result Variables Backuped - Result Include Vanishing Phases - End with "origin"
Removed Variables within Vanished Phases
===================================================
 
