====================================================
Genearl Information:
====================================================
CasADi Implementation
2D Locomotion Control using Mixed-integer Nonlinear Optimization
Multi-Phase Formulation:
Optimize over Control, Gait Sequence, and Switching Time
----------------------------------------------------
Date and Time:
   26-Apr-2019 18:23:13

----------------------------------------------------
Correspondent Log File Name: multiphase-log-20190426T182313
====================================================
 
====================================================
Setup Robot Kinematics Properties: 
----------------------------------------------------
====================================================
Setup Terrain Model: 
----------------------------------------------------
Specify Number of Stairs (Terrain Elevation Change) of the Terrain Model (0 -> Flat Terrain, 1,2..10 --> 1,2..10 Stairs; Maximum Number of Stairs can take, 10):
1
Selected 1-Stair Terrain
----------------------------------------------------
Define Length of Each Stair -> Use a Row Vector to Define (i.e. [1, 1.5, 0.5,...]), Can use repmat(StairLength,1,NumStairs) for Stairs with Uniform Length:
0.7
----------------------------------------------------
Define Terrain Height Change of Each Stair -> Use a Row Vector to Define (i.e. [0.3, 0.2, -0.1,...]), Can use repmat(StairHeightChange,1,NumStairs) for Stairs with Same Height Change:
0.1
----------------------------------------------------
Plot the Terrain Model? 1 -> Yes; 2 -> No
1
----------------------------------------------------
----------------------------------------------------
Friction Cone: 0.6
====================================================
 
====================================================
Temporal Setup:
----------------------------------------------------
Terminal Time:
Optimization of Terminal Time (Tend): 
1 -> Optimize, 2 -> Left as Free Variable 
2
Terminal Time (Tend) is Set as Free Variables
Specify Upper Bound of Terminal Time (i.e. 1,2..(s)):
2
----------------------------------------------------
Input Number of Phases: 
6
----------------------------------------------------
Input Number of Knots for Each Phase: 
5
----------------------------------------------------
Resultant Discretization:
Knot/Discretization Step Size of tau: 0.033333
Number of Knots/Discretization of tau (from 0 to 1: 31) (Number of Knots/Discretization in Each Phase * Number of Phases(NumKnots) + 1)
====================================================
 
====================================================
Task Specification:
----------------------------------------------------
Define Travel Distance along X-axis: 
Stairs --> Specify any Location or Specify Any Distance larger than the Final Terrain Elevation Change Point with Half of the Body Length More, at Least (1:
1.5
====================================================
 
====================================================
Big-M Setup
====================================================
Big-M for Foot/End-Effector in X-axis:
Select the Setup Case for big-M value for Foot/End-Effector Velocity in x-axis: 
1 -> Default Value (5m/s); 2 -> N time of average task speed (in X-axis); 3 -> User Specified: 
2
 
[Warning: Terminal Time is Undefined -> Unable to Compute Average Task Speed in X-axis] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('casadi_multi_phase', '/home/jiayu/Desktop/Locomotion-Control-using-Mixed-Integer_Optimization/casadi_implementation/casadi_multi_phase.m', 305)" style="font-weight:bold">casadi_multi_phase</a> (<a href="matlab: opentoline('/home/jiayu/Desktop/Locomotion-Control-using-Mixed-Integer_Optimization/casadi_implementation/casadi_multi_phase.m',305,0)">line 305</a>)] 
Manually Specify a Big-M value for Foot/End-Effector Velocity in X-axis: 
5
 
Configured Big-M Value for Foot/End-Effector Velocity for X-axis: 5 m/s
----------------------------------------------------
Big-M for Foot/End-Effector in Y-axis:
Select the Setup Case for big-M value for Foot/End-Effector Velocity in Y-axis: 
1 -> Default Value (5m/s); 2 -> User Specified: 
2
 
Input Big-M value for foot/end-effector Velocity for Y-axis (e.g. 1-5+ m/s): 
NOTE: Can Write the Value as the Kinematics Bounding Box Height (BoundingBox_Height)/Desired Time to Travel the Entire Bounding Box Height
5
 
Configured Big-M Value for Foot/End-Effector Velocity for Y-axis: 5 m/s
----------------------------------------------------
Big-M for Contact Forces
Input Big-M for Foot-Ground Reaction Forces along X-axis (e.g. 200,300,1000,1e5):
1e3
----------------------------------------------------
Input Big-M for Foot-Ground Reaction Forces along Y-axis (e.g. 1e3, 1e5, better larger than Mfx):
1e3
====================================================
====================================================
Solver Setups:
====================================================
Solver Selection: 
1 -> Knitro; 2 -> Bonmin 
1
Selected Solver: knitro
----------------------------------------------------
Solver Dependent Options:
----------------------------------------------------
Define Number of Max Nodes to be Explored: 
 1--> Worst Case Scenario; 2 --> User Specified; 3 --> Default Value
1
Selected Worst-case Scenarios to Explore 4096 Nodes
====================================================
 
====================================================
Generate Decision Variables Vectors/Lists:
----------------------------------------------------
Checked - Contact Configuration and Switching Time Varaibels for Each Phase are Generated Coorectly
-----------------------------------------------------------
Checked - Names in DecisionVars are consistent with the name labels in VarNamesList
Constraints and Objetive Function Constructed
===================================================
 
===================================================
Optimization Started

=======================================
           Academic License
       (NOT FOR COMMERCIAL USE)
         Artelys Knitro 11.1.2
=======================================

MINLP solver shifted start point to satisfy bounds (12 variables).
hessopt:                 1
mip_branchrule:          2
mip_maxnodes:            4096
mip_outinterval:         50
mip_outlevel:            2
mip_selectrule:          2
Knitro changing mip_method from AUTO to 1.
Knitro changing mip_rootalg from AUTO to 1.
Knitro changing mip_lpalg from AUTO to 3.
Knitro changing mip_rounding from AUTO to 3.
Knitro changing mip_heuristic from AUTO to 2.
Knitro changing mip_pseudoinit from AUTO to 1.

Problem Characteristics
-----------------------
Objective goal:  Minimize
Objective type:  general
Number of variables:                                576
    bounded below only:                              60
    bounded above only:                               1
    bounded below and above:                         12
    fixed:                                           12
    free:                                           491
Number of binary variables:                          12
Number of integer variables:                          0
Number of constraints:                             1032
    linear equalities:                                0
    quadratic equalities:                             0
    gen. nonlinear equalities:                      300
    linear one-sided inequalities:                  608
    quadratic one-sided inequalities:                 0
    gen. nonlinear one-sided inequalities:            0
    linear two-sided inequalities:                    0
    quadratic two-sided inequalities:                 0
    gen. nonlinear two-sided inequalities:          124
Number of nonzeros in Jacobian:                    3675
Number of nonzeros in Hessian:                     1491

Knitro detected 0 GUB constraints
Knitro derived 0 knapsack covers after examining 60 constraints
Knitro solving root node relaxation
Knitro searching for integer feasible point using heuristic
   iter =      1: Iinf =      2, FeasError =   4.441e-01
   iter =      2: Iinf =      2, FeasError =   2.250e-01
   iter =      3: Iinf =      2, FeasError =   4.441e-01
   iter =      4: Iinf =      2, FeasError =   2.250e-01
   iter =      5: Iinf =      2, FeasError =   4.441e-01
   iter =      6: Iinf =      2, FeasError =   2.250e-01
   iter =      7: Iinf =      2, FeasError =   4.441e-01
   iter =      8: Iinf =      2, FeasError =   2.250e-01
   iter =      9: Iinf =      2, FeasError =   4.441e-01
   iter =     10: Iinf =      2, FeasError =   2.250e-01
   iter =     11: Iinf =      2, FeasError =   4.441e-01
   iter =     12: Iinf =      2, FeasError =   2.250e-01
   iter =     13: Iinf =      2, FeasError =   4.441e-01
   iter =     14: Iinf =     12, FeasError =   1.745e-01
   iter =     15: Iinf =      2, FeasError =   4.441e-01
   iter =     16: Iinf =      2, FeasError =   2.250e-01
   iter =     17: Iinf =      2, FeasError =   4.441e-01
   iter =     18: Iinf =     12, FeasError =   1.394e-01
   iter =     19: Iinf =      2, FeasError =   4.441e-01
   iter =     20: Iinf =      7, FeasError =   1.394e-01
   iter =     21: Iinf =     12, FeasError =   4.441e-01
   iter =     22: Iinf =      2, FeasError =   2.250e-01
   iter =     23: Iinf =      2, FeasError =   4.441e-01
   iter =     24: Iinf =      7, FeasError =   1.394e-01
   iter =     25: Iinf =      2, FeasError =   4.441e-01
   iter =     26: Iinf =      2, FeasError =   2.250e-01
   iter =     27: Iinf =      2, FeasError =   4.441e-01
   iter =     28: Iinf =      2, FeasError =   2.250e-01
   iter =     29: Iinf =      2, FeasError =   4.441e-01
   iter =     30: Iinf =      2, FeasError =   2.250e-01
   iter =     31: Iinf =      2, FeasError =   4.441e-01
   iter =     32: Iinf =      2, FeasError =   2.250e-01
   iter =     33: Iinf =      2, FeasError =   4.441e-01
   iter =     34: Iinf =      2, FeasError =   2.250e-01
   iter =     35: Iinf =      2, FeasError =   4.441e-01
   iter =     36: Iinf =      7, FeasError =   1.394e-01
   iter =     37: Iinf =      2, Infeasible
   iter =     38: Iinf =      2, FeasError =   2.250e-01
   iter =     39: Iinf =      2, FeasError =   4.441e-01
   iter =     40: Iinf =      7, FeasError =   1.394e-01
   iter =     41: Iinf =      2, FeasError =   4.441e-01
   iter =     42: Iinf =      2, FeasError =   2.250e-01
   iter =     43: Iinf =      2, FeasError =   4.441e-01
   iter =     44: Iinf =      2, FeasError =   2.250e-01
   iter =     45: Iinf =      1, FeasError =   4.023e-01
   iter =     46: Iinf =      8, FeasError =   1.391e-01
   iter =     47: Iinf =      2, FeasError =   4.441e-01
   iter =     48: Iinf =      2, FeasError =   2.000e-03
   iter =     49: Iinf =      2, FeasError =   4.441e-01
   iter =     50: Iinf =      2, FeasError =   2.250e-01
   iter =     51: Iinf =      2, FeasError =   4.441e-01
   iter =     52: Iinf =      2, FeasError =   2.250e-01
   iter =     53: Iinf =      4, FeasError =   3.129e-03
   iter =     54: Iinf =     12, FeasError =   2.993e-03
*  iter =     55: Iinf =      0, FeasError =   7.289e-11, Obj =   3.776e+00
Knitro found integer feasible point in 55 heuristic iterations
Knitro MIP using Branch and Bound method

                                            Best        Best     Cumulative
   Node    Left    Iinf    Objective     Relaxation   Incumbent   Real Time
  ------  ------  ------  ----------     ----------  ----------  ----------
       1       0      12    1.41e+00       1.41e+00    3.78e+00      15.865
      50      11         INFEASIBLE  pr    1.41e+00    3.78e+00      36.811
     100       5       1    2.14e+00       1.41e+00    3.78e+00      62.615
     107       0            1.31e+02      1.80e+308    3.78e+00      64.278
  WARNING -- integrality gap is negative

EXIT: Optimal solution found.

Final Statistics for MIP
------------------------
Final objective value               =   3.77570686469254e+00
Final integrality gap (abs / rel)   =-1.80e+308 / -4.76e+307 (      -inf%)
# of nodes processed                =      107
# of subproblems processed          =      163
Total program time (secs)           =      64.28091 (    64.620 CPU time)
Time spent in evaluations (secs)    =       4.75431

===========================================================================

               t_proc [s]   t_wall [s]    n_eval
      nlp_fg         1.69         1.66     35953
   nlp_gf_jg         1.44         1.43     22955
  nlp_hess_l         1.37         1.36     22866
      solver         64.6         64.3         1
===================================================
 
===================================================
Result Extraction:
---------------------------------------------------
Result Variables Extracted
Original Result Variables Backuped - Result Include Vanishing Phases - End with "origin"
Removed Variables within Vanished Phases
===================================================
 
