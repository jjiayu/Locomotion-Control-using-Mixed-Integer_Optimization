Date and Time:
   04-Mar-2019 19:31:57

Correspond Log File Name: log-20190304T193157
 
Locomotion Control with Mixed-integer Nonlinear Optimization in 2D
Time Step Grouping Script - All the Phases have the same Number of Time Steps
 
Input Number of Time Steps (e.g. 20): 
40
 
Input Size of Time Steps (e.g. 0.05): 
0.025
 
Input Number of Phases (type the same value with number of time steps if we want to allow mode change per time step): 
8
 
Input Goal State (Travel Distance e.g. 0.5): 
0.8
 
Q matrix in the Cost Function is Sparse
A matrix for Constraints is Sparse
 
Set How the Terminal Conditions will be handled; 0: Hard Constraint; 1: Soft Constraint in Cost Function 
0
Terminal Condition is Set as Hard Constraints
 
Use Knitro
 
[Warning: <a href="matlab: opentoline('C:\Program Files\Artelys\Knitro 11.1.0\knitromatlab\knitromatlab_mip.p',1460,0)">File: knitromatlab_mip.p Line: 1460 Column: 0
</a>The temporary variable workerobjHandle will be cleared at the beginning of each iteration of the parfor
loop.
Any value assigned to it before the loop will be lost.  If workerobjHandle is used before it is assigned
in the parfor loop, a runtime error will occur.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'PARFOR_TEMPORARY_VARIABLES')">Parallel for Loops in MATLAB, "Temporary Variables"</a>.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('MAIN', 'C:\Users\jiayu\Documents\Locomotion-Control-using-Mixed-Integer_Optimization\Fixed_Time_Step_Grouping_2DRigidBodyDynamics_Euler_Integration\MAIN.m', 998)" style="font-weight:bold">MAIN</a> (<a href="matlab: opentoline('C:\Users\jiayu\Documents\Locomotion-Control-using-Mixed-Integer_Optimization\Fixed_Time_Step_Grouping_2DRigidBodyDynamics_Euler_Integration\MAIN.m',998,0)">line 998</a>)] 
[Warning: <a href="matlab: opentoline('C:\Program Files\Artelys\Knitro 11.1.0\knitromatlab\knitromatlab_mip.p',1621,0)">File: knitromatlab_mip.p Line: 1621 Column: 0
</a>The temporary variable workerconHandle will be cleared at the beginning of each iteration of the parfor
loop.
Any value assigned to it before the loop will be lost.  If workerconHandle is used before it is assigned
in the parfor loop, a runtime error will occur.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'PARFOR_TEMPORARY_VARIABLES')">Parallel for Loops in MATLAB, "Temporary Variables"</a>.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('MAIN', 'C:\Users\jiayu\Documents\Locomotion-Control-using-Mixed-Integer_Optimization\Fixed_Time_Step_Grouping_2DRigidBodyDynamics_Euler_Integration\MAIN.m', 998)" style="font-weight:bold">MAIN</a> (<a href="matlab: opentoline('C:\Users\jiayu\Documents\Locomotion-Control-using-Mixed-Integer_Optimization\Fixed_Time_Step_Grouping_2DRigidBodyDynamics_Euler_Integration\MAIN.m',998,0)">line 998</a>)] 
[Warning: <a href="matlab: opentoline('C:\Program Files\Artelys\Knitro 11.1.0\knitromatlab\knitromatlab_mip.p',1709,0)">File: knitromatlab_mip.p Line: 1709 Column: 0
</a>The temporary variable workerconHandle will be cleared at the beginning of each iteration of the parfor
loop.
Any value assigned to it before the loop will be lost.  If workerconHandle is used before it is assigned
in the parfor loop, a runtime error will occur.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'PARFOR_TEMPORARY_VARIABLES')">Parallel for Loops in MATLAB, "Temporary Variables"</a>.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('MAIN', 'C:\Users\jiayu\Documents\Locomotion-Control-using-Mixed-Integer_Optimization\Fixed_Time_Step_Grouping_2DRigidBodyDynamics_Euler_Integration\MAIN.m', 998)" style="font-weight:bold">MAIN</a> (<a href="matlab: opentoline('C:\Users\jiayu\Documents\Locomotion-Control-using-Mixed-Integer_Optimization\Fixed_Time_Step_Grouping_2DRigidBodyDynamics_Euler_Integration\MAIN.m',998,0)">line 998</a>)] 

=======================================
           Academic License
       (NOT FOR COMMERCIAL USE)
         Artelys Knitro 11.1.0
=======================================

algorithm:               1
bar_initmu:              0.1
gradopt:                 4
hessopt:                 2
honorbnds:               1
outlev:                  4
par_concurrent_evals:    0
mip_heuristic:           0
mip_outinterval:         100
mip_outlevel:            2
mip_selectrule:          3
Knitro changing mip_method from AUTO to 1.
Knitro changing mip_rootalg from AUTO to 1.
Knitro changing mip_lpalg from AUTO to 3.
Knitro changing mip_branchrule from AUTO to 2.
Knitro changing mip_rounding from AUTO to 3.
Knitro changing mip_pseudoinit from AUTO to 1.

Problem Characteristics
-----------------------
Objective goal:  Minimize
Objective type:  general
Number of variables:                                754
    bounded below only:                               0
    bounded above only:                               0
    bounded below and above:                         16
    fixed:                                            0
    free:                                           738
Number of binary variables:                          16
Number of integer variables:                          0
Number of constraints:                             1612
    linear equalities:                              372
    quadratic equalities:                             0
    gen. nonlinear equalities:                       40
    linear one-sided inequalities:                  800
    quadratic one-sided inequalities:                 0
    gen. nonlinear one-sided inequalities:          400
    linear two-sided inequalities:                    0
    quadratic two-sided inequalities:                 0
    gen. nonlinear two-sided inequalities:            0
Number of nonzeros in Jacobian:                  334372
Number of nonzeros in Hessian:                   284635

Knitro detected 0 GUB constraints
Knitro derived 0 knapsack covers after examining 0 constraints
Knitro solving root node relaxation
Knitro MIP using Branch and Bound method

                                            Best        Best     Cumulative
   Node    Left    Iinf    Objective     Relaxation   Incumbent   Real Time
  ------  ------  ------  ----------     ----------  ----------  ----------
       1       0      16   4.21e+006      4.21e+006                  42.307
*     77      20       0   1.94e+007  f   4.59e+006   1.94e+007    4073.608
*     98      27       0   9.96e+006  f   4.61e+006   9.96e+006    5172.078
*     99      26       0   9.35e+006  f   4.61e+006   9.35e+006    5219.443
     100      25       2   7.61e+006      4.61e+006   9.35e+006    5234.527
*    104      25       0   8.45e+006  f   4.88e+006   8.45e+006    5431.406
*    144      33       0   8.06e+006  f   4.89e+006   8.06e+006    6817.879
*    196      33       0   8.03e+006  f   5.33e+006   8.03e+006    8781.774
     200      33         INFEASIBLE  pr   5.33e+006   8.03e+006    8933.871
*    249      36       0   7.87e+006  f   5.64e+006   7.87e+006   10888.208
     300      33       5   7.08e+006      5.79e+006   7.87e+006   12808.161
*    319      26       0   7.80e+006  f   5.86e+006   7.80e+006   13669.510
*    320      25       0   7.75e+006  f   5.86e+006   7.75e+006   13770.455
     400      13       7   6.32e+006      6.32e+006   7.75e+006   16929.990
     468       0           7.68e+006      7.75e+006   7.75e+006   19164.732

EXIT: Optimal solution found.

Final Statistics for MIP
------------------------
Final objective value               =  7.74534312139364e+006
Final integrality gap (abs / rel)   = 0.00e+000 /  0.00e+000 ( 0.00)
# of nodes processed                =      468
# of subproblems processed          =      480
Total program time (secs)           =   19164.732 ( 19170.141 CPU time)
Time spent in evaluations (secs)    =    1722.661

===========================================================================

